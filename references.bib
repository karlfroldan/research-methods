-- Add this
@misc{Breitner2018,
      title={Ready, Set, Verify! Applying hs-to-coq to real-world Haskell code}, 
      author={Joachim Breitner and Antal Spector-Zabusky and Yao Li and Christine Rizkallah and John Wiegley and Stephanie Weirich},
      year={2018},
      eprint={1803.06960},
      archivePrefix={arXiv},
      primaryClass={cs.PL}
}

-- Add this
@article{SpectorZabusky2018,
   title={Total Haskell is reasonable Coq},
   ISBN={9781450355865},
   url={http://dx.doi.org/10.1145/3167092},
   DOI={10.1145/3167092},
   journal={Proceedings of the 7th ACM SIGPLAN International Conference on Certified Programs and Proofs},
   publisher={ACM},
   author={Spector-Zabusky, Antal and Breitner, Joachim and Rizkallah, Christine and Weirich, Stephanie},
   year={2018},
   month={Jan}
}

-- Add this
@article{ElBakouny2017,
   title={A Coq-based synthesis of Scala programs which are correct-by-construction},
   ISBN={9781450350983},
   url={http://dx.doi.org/10.1145/3103111.3104041},
   DOI={10.1145/3103111.3104041},
   journal={Proceedings of the 19th Workshop on Formal Techniques for Java-like Programs},
   publisher={ACM},
   author={El Bakouny, Youssef and Crolard, Tristan and Mezher, Dani},
   year={2017},
   month={Jun}
}

-- Add this
@inproceedings{AbelBenkeBove2005,
author = {Abel, Andreas and Benke, Marcin and Bove, Ana and Hughes, John and Norell, Ulf},
year = {2005},
month = {01},
pages = {62-73},
title = {Verifying Haskell programs using constructive type theory},
journal = {Haskell'05 - Proceedings of the ACM SIGPLAN 2005 Haskell Workshop},
doi = {10.1145/1088348.1088355}
}

-- Add this
@article{ZaghloulAlJami2017,
  author          = {Zaghloul et al.},
  title           = {Parallelizing A* Path Finding Algorithm},
  journal         = {International Journal Of Engineering And Computer Science},
  volume          = {6},
  number          = {9},
  year            = {2017},
  pages           = {22469-22476},
}

-- Add This
@inproceedings{WeinstockHolladay,
  title={Hash Distributed A* Distributed Termination Detection Path Reconstruction},
  author={Ariana Weinstock and Rachel Holladay},
  year={2016}
}

-- Add this
@book{Marlow2013,
  author         = {Simon Marlow},
  editor         = {Andy Oram and Maria Gulick},
  title          = {Parallel and Concurrent Programming in Haskell},
  publisher      = {O'Reilly Media, Inc.},
  year           = {2013}
}

@book{CLRS,
author = {Cormen, Thomas H. and Leiserson, Charles E. and Rivest, Ronald L. and Stein, Clifford},
title = {Introduction to Algorithms, Third Edition},
year = {2009},
isbn = {0262033844},
publisher = {The MIT Press},
edition = {3rd}
}

@book{Skiena,
  abstract = {This expanded and updated second edition of a classic bestseller continues to take the mystery out of designing and analyzing algorithms and their efficacy and efficiency. Expanding on the highly successful formula of the first edition, the book now serves as the primary textbook of choice for any algorithm design course while maintaining its status as the premier practical reference guide to algorithms. NEW: (1) Incorporates twice the tutorial material and exercises. (2) Provides full online support for lecturers, and a completely updated and improved website component with lecture slides, audio and video. (3) Contains a highly unique catalog of the 75 most important algorithmic problems. (4) Includes new war stories and interview problems, relating experiences from real-world applications. Unique, handy reference package with a practical, hands-on appeal to a wide audience This classic bestseller has been expanded and updated with twice the original tutorial material and exercises Contains a highly unique catalog of the 75 most important algorithmic problems Additional useful information such as lecture slides and updates available via author's website.},
  added-at = {2015-05-11T09:08:43.000+0200},
  address = {London},
  author = {Skiena, Steven S.},
  biburl = {https://www.bibsonomy.org/bibtex/29b2f5050241fea63ff5f49cc29b5bebf/ytyoun},
  doi = {10.1007/978-1-84800-070-4},
  interhash = {1087fa2b9db733b071ece02fc207a88d},
  intrahash = {9b2f5050241fea63ff5f49cc29b5bebf},
  isbn = {9781848000704 1848000707 9781848000698 1848000693},
  keywords = {algorithm programming textbook},
  publisher = {Springer},
  refid = {370729337},
  timestamp = {2015-12-12T14:24:40.000+0100},
  title = {The Algorithm Design Manual},
  year = 2008
}

@book{Knuth1997,
author = {Knuth, Donald E.},
title = {The Art of Computer Programming, Volume 1 (3rd Ed.): Fundamental Algorithms},
year = {1997},
isbn = {0201896834},
publisher = {Addison Wesley Longman Publishing Co., Inc.},
address = {USA}
}

-- add this
@article{HartNilssonRaphael1968,
  author          = {Hart, Peter E. and Nillson, Nils J. and Betram, Raphael},
  title           = {A Formal Basis for the Heuristic Determination of Minimum Cost Paths},
  journal         = {IEEE Transactions of Systems Science and Cybernetics},
  volume          = {SSC-4},
  number          = {2},
  year            = {1968}
}

-- Add this
@article{Cheong2006,
  author          = {Mun Hon Cheong},
  title           = {Functional Programming and 3D Games},
  year            = {2006},
  publisher       = {University of New South Wales}
}

-- Add this
@InProceedings{Hammond2011,
author="Hammond, Kevin",
editor="Romanovsky, Alexander
and Vardanega, Tullio",
title="Why Parallel Functional Programming Matters: Panel Statement",
booktitle="Reliable Software Technologies - Ada-Europe 2011",
year="2011",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="201--205",
abstract="Parallel programming is returning to importance. Functional programming ideas offer a way to break through the barriers that restrict parallel programmers, dramatically simplifying how parallelism can be exploited. This paper explores some ideas of abstraction from functional programming, showing how functional programming offers opportunities to deal with real problems of parallelism.",
isbn="978-3-642-21338-0"
}

-- Add this
@ARTICLE{Prim1957,
       author = {{Prim}, R.~C.},
        title = "{Shortest Connection Networks And Some Generalizations}",
      journal = {Bell System Technical Journal},
         year = 1957,
        month = nov,
       volume = {36},
       number = {6},
        pages = {1389-1401},
          doi = {10.1002/j.1538-7305.1957.tb01515.x},
       adsurl = {https://ui.adsabs.harvard.edu/abs/1957BSTJ...36.1389P},
      adsnote = {Provided by the SAO/NASA Astrophysics Data System}
}

@misc{HaskellSite,
  title        = {Haskell Programming Language},
  howpublished = "\url{https://haskell.org}"
}

@misc{ThreadScope,
  title        = {ThreadScope},
  howpublished = "\url{https://github.com/haskell/ThreadScope}",
}

-- Add this
@article{Mokhov2017,
author = {Mokhov, Andrey},
title = {Algebraic Graphs with Class (Functional Pearl)},
year = {2017},
issue_date = {October 2017},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {52},
number = {10},
issn = {0362-1340},
url = {https://doi.org/10.1145/3156695.3122956},
doi = {10.1145/3156695.3122956},
journal = {SIGPLAN Not.},
month = sep,
pages = {2â€“13},
numpages = {12},
keywords = {graph theory, Haskell, algebra}
}

-- Add this
@book{Buck2015,
  author         = {Jamis Buck},
  editor         = {Jackquelyn Carter},
  title          = {Mazes for Programmers},
  publisher      = {The Pragmatic Programmers},
  year           = {2015},
  isbn           = {978-1680500554},
}

-- Add this
@article{Hughes1989,
	AUTHOR = {J. Hughes},
	TITLE = {{Why Functional Programming Matters}},
	JOURNAL = {Computer Journal},
	VOLUME = {32},
	NUMBER = {2},
        PAGES = {98--107},
	YEAR = {1989}
}

-- Add this
@phdthesis{Kesseler1996,
  author      = {Marco Kesseler},
  title       = {The Implementation of Functional Languages on Parallel Machines with Distributed Memory},
  school      = {Radboud University Nijmegen},
  year        = {1996}
}

-- Add this
@article{Loidl2003,
  author={Loidl, H.-W.
  and Rubio, F.
  and Scaife, N.
  and Hammond, K.
  and Horiguchi, S.
  and Klusik, U.
  and Loogen, R.
  and Michaelson, G. J.
  and Pe{\~{n}}a, R.
  and Priebe, S.
  and Reb{\'o}n, {\'A} J.
  and Trinder, P. W.},
  title={Comparing Parallel Functional Languages: Programming and Performance},
  journal={Higher-Order and Symbolic Computation},
  year={2003},
  month={Sep},
  day={01},
  volume={16},
  number={3},
  pages={203-251},
  abstract={This paper presents a practical evaluation and comparison of three state-of-the-art parallel functional languages. The evaluation is based on implementations of three typical symbolic computation programs, with performance measured on a Beowulf-class parallel architecture.},
  issn={1573-0557},
  doi={10.1023/A:1025641323400},
  url={https://doi.org/10.1023/A:1025641323400}
}

-- Add this
@book{RabhiGuy1999,
author = {Rabhi, Fethi and Lapalme, Guy},
title = {Algorithms; A Functional Programming Approach},
year = {1999},
isbn = {0201596040},
publisher = {Addison-Wesley Longman Publishing Co., Inc.},
address = {USA},
edition = {1st},
abstract = {From the Publisher: The design of algorithms for problem-solving lies at the heart of computer science. Concise yet authoritative, Algorithms: A Functional Programming Approach teaches the skills needed to master this essential subject. The authors challenge more traditional methods of teaching algorithms by using a functional programming context, with Haskell as the implementation language. This leads to smaller, clearer and more elegant programs which enable the programmer to understand the algorithm itself more quickly and to use that understanding to explore alternative solutions. Placing the emphasis on program development rather than the mathematical properties of algorithms, the book uses a succession of practical programming examples to develop in the reader problem-solving skills which can be easily transferred to other language paradigms. Key features of this innovative text include: Unmatched collection of functional programming algorithms A wealth of practical examples, bringing the algorithms into clear focus End of chapter exercises throughout Source code and selected solutions freely available online Comprehensive index and bibliographical notes Appendices on Haskell implementations and mathematical background For computer science students taking algorithms and/or functional programming courses, Algorithms: A Functional Programming Approach represents the ideal textbook. It is also an invaluable reference source of functional programs for practitioners.}
}

-- Add This
@inproceedings{Laxman2018,
  author = {Dhulipala, Laxman and Blelloch, Guy E. and Shun, Julian},
  title = {Theoretically Efficient Parallel Graph Algorithms Can Be Fast and Scalable},
  year = {2018},
  isbn = {9781450357999},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  url = {https://doi.org/10.1145/3210377.3210414},
  doi = {10.1145/3210377.3210414},
  abstract = {There has been significant recent interest in parallel graph processing due to the need to quickly analyze the large graphs available today. Many graph codes have been designed for distributed memory or external memory. However, today even the largest publicly-available real-world graph (the Hyperlink Web graph with over 3.5 billion vertices and 128 billion edges) can fit in the memory of a single commodity multicore server. Nevertheless, most experimental work in the literature report results on much smaller graphs, and the ones for the Hyperlink graph use distributed or external memory. Therefore, it is natural to ask whether we can efficiently solve a broad class of graph problems on this graph in memory. This paper shows that theoretically-efficient parallel graph algorithms can scale to the largest publicly-available graphs using a single machine with a terabyte of RAM, processing them in minutes. We give implementations of theoretically-efficient parallel algorithms for 13 important graph problems. We also present the optimizations and techniques that we used in our implementations, which were crucial in enabling us to process these large graphs quickly. We show that the running times of our implementations outperform existing state-of-the-art implementations on the largest real-world graphs. For many of the problems that we consider, this is the first time they have been solved on graphs at this scale. We provide a publicly-available benchmark suite containing our implementations.},
  booktitle = {Proceedings of the 30th on Symposium on Parallelism in Algorithms and Architectures},
  pages = {393â€“404},
  numpages = {12},
  keywords = {graph processing, multicore, parallel graph algorithms, shared-memory, work-efficiency},
  location = {Vienna, Austria},
  series = {SPAA '18}
}

-- Add this
@article{Lumsdaine2007,
  title={Challenges in Parallel Graph Processing},
  author={A. Lumsdaine and Douglas P. Gregor and B. Hendrickson and Jonathan W. Berry},
  journal={Parallel Process. Lett.},
  year={2007},
  volume={17},
  pages={5-20}
}

@techreport{NasaCopilot2020,
  author      = {Ivan Perez and Frank Dedden and Alwyn Goodloe},
  title       = {Copilot 3},
  institution = {National Aeronautics and Space Administration},
  year        = {2020},
  month       = {May},
  number      = {20200003164},
}

@book{SilberschatzGalvin2012,
author = {Silberschatz, Abraham and Galvin, Peter B. and Gagne, Greg},
title = {Operating System Concepts},
year = {2018},
isbn = {1118063333},
publisher = {Wiley Publishing},
edition = {10th},
abstract = {The ninth edition of Operating System Concepts continues to evolve to provide a solid theoretical foundation for understanding operating systems. This edition has been updated with more extensive coverage of the most current topics and applications, improved conceptual coverage and additional content to bridge the gap between concepts and actual implementations. A new design allows for easier navigation and enhances reader motivation. Additional end-of-chapter, exercises, review questions, and programming exercises help to further reinforce important concepts. WileyPLUS, including a test bank, self-check exercises, and a student solutions manual, is also part of the comprehensive support package.}
}

@inproceedings{Rios2011,
  title={PNBA * : A Parallel Bidirectional Heuristic Search Algorithm},
  author={L. Rios and L. Chaimowicz},
  year={2011}
}

@inproceedings{Sanz2016,
  title={Improving Hash Distributed A* for Shared Memory Architectures Using Abstraction},
  author={Victoria Sanz and A. D. Giusti and M. Naiouf},
  booktitle={ICA3PP},
  year={2016}
}

@article{KainlKainz1997,
  author          = {H. Kaindl and G. Kainz},
  title           = {Bidirectional Heuristic Search Reconsidered},
  journal         = {Journal of Artificial Intelligence Research},
  volume          = {7},
  number          = {283-317},
  year            = {1997}
}

@article{Kishimoto2009,
  author          = {A. Kishimoto and A. Fukunaga and A. Botea},
  title           = {Scalable, Parallel Best-First Search for Optimal Sequential Planning},
  journal         = {Association for the Advancement of Artificial Intelligence},
  year            = {2009}
}

@article{Frame2014,
  title={A comparison of functional and imperative programming techniques for mathematical software development},
  author={Frame, Scott and Coffey, John W},
  journal={Journal of Systemics, Cybernetics and Informatics},
  volume={12},
  number={2},
  pages={1--10},
  year={2014}
}

@article{Erwig2001,
  title={Inductive graphs and functional graph algorithms},
  author={Erwig, Martin},
  journal={Journal of Functional Programming},
  volume={11},
  number={5},
  pages={467--492},
  year={2001},
  publisher={Citeseer}
}

@inproceedings{Harris2005,
  title={Haskell on a shared-memory multiprocessor},
  author={Harris, Tim and Marlow, Simon and Jones, Simon Peyton},
  booktitle={Proceedings of the 2005 ACM SIGPLAN Workshop on Haskell},
  pages={49--61},
  year={2005}
}